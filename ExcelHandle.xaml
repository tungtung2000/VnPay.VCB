<Activity mc:Ignorable="sap sap2010" x:Class="ExcelHandle" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_folderLastMonth" Type="InArgument(upr:ILocalResource)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>770.4,2982.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="41">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.IO</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>

    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="65">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExcelHandle" sap:VirtualizedContainerService.HintSize="505.6,2917.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="outlookTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="khoTable" />
      <Variable x:TypeArguments="x:Int64" Name="vcbMoney" />
      <Variable x:TypeArguments="sd:DataTable" Name="vcbHoantraTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="khoGiftDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="khoTopupDT" />
      <Variable x:TypeArguments="x:Int64" Name="outlookMoney" />
      <Variable x:TypeArguments="x:Int32" Name="khoTopupGDCount" />
      <Variable x:TypeArguments="sd:DataTable" Name="soPhuTable" />
      <Variable x:TypeArguments="x:Int64" Name="khoMoney" />
      <Variable x:TypeArguments="si:DirectoryInfo" Name="fileFolderPath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Doc table" sap:VirtualizedContainerService.HintSize="462.4,1560.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="sheetName" />
        <Variable x:TypeArguments="x:Int32" Name="firstRow" />
        <Variable x:TypeArguments="x:Int32" Name="lastRow" />
        <Variable x:TypeArguments="sd:DataTable" Name="tmpTable" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="400,62.4" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:KillProcess>
      <Sequence DisplayName="create datatable for later use" sap:VirtualizedContainerService.HintSize="400,941.6" sap2010:WorkflowViewState.IdRef="Sequence_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="337.6,98.4" sap2010:WorkflowViewState.IdRef="Delay_1" />
        <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="337.6,69.6" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Ngày_x0020_giao_x0020_dịch&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Số_x0020_tham_x0020_chiếu&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Số_x0020_tiền_x0020_ghi_x0020_nợ&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Số_x0020_tiền_x0020_ghi_x0020_có&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Mô_x0020_tả&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
          <ui:BuildDataTable.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">soPhuTable</CSharpReference>
            </OutArgument>
          </ui:BuildDataTable.DataTable>
        </ui:BuildDataTable>
        <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="337.6,69.6" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
          <ui:BuildDataTable.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">outlookTable</CSharpReference>
            </OutArgument>
          </ui:BuildDataTable.DataTable>
        </ui:BuildDataTable>
        <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="337.6,69.6" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
          <ui:BuildDataTable.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">khoTable</CSharpReference>
            </OutArgument>
          </ui:BuildDataTable.DataTable>
        </ui:BuildDataTable>
        <ui:ClearDataTable DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="337.6,90.4" sap2010:WorkflowViewState.IdRef="ClearDataTable_3">
          <ui:ClearDataTable.DataTable>
            <InOutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">khoTable</CSharpReference>
            </InOutArgument>
          </ui:ClearDataTable.DataTable>
        </ui:ClearDataTable>
        <ui:ClearDataTable DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="337.6,90.4" sap2010:WorkflowViewState.IdRef="ClearDataTable_2">
          <ui:ClearDataTable.DataTable>
            <InOutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">outlookTable</CSharpReference>
            </InOutArgument>
          </ui:ClearDataTable.DataTable>
        </ui:ClearDataTable>
        <ui:ClearDataTable DisplayName="Clear Data Table" sap:VirtualizedContainerService.HintSize="337.6,90.4" sap2010:WorkflowViewState.IdRef="ClearDataTable_1">
          <ui:ClearDataTable.DataTable>
            <InOutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">soPhuTable</CSharpReference>
            </InOutArgument>
          </ui:ClearDataTable.DataTable>
        </ui:ClearDataTable>
      </Sequence>
      <ui:ForEachFolderX DisplayName="For Each Folder in Folder SP VCB" sap:VirtualizedContainerService.HintSize="400,91.2" sap2010:WorkflowViewState.IdRef="ForEachFolderX_1" IncludeSubFolders="False" OrderBy="NameAscFirst" SkipFoldersWithoutPermission="False">
        <ui:ForEachFolderX.Body>
          <ActivityAction x:TypeArguments="si:DirectoryInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:DirectoryInfo" Name="CurrentFolder" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEachFileX DisplayName="For Each File in Folder so phu vcb" sap:VirtualizedContainerService.HintSize="586,998" sap2010:WorkflowViewState.IdRef="ForEachFileX_8" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                <ui:ForEachFileX.Body>
                  <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                    <ActivityAction.Argument1>
                      <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                    </ActivityAction.Argument1>
                    <ActivityAction.Argument2>
                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                    </ActivityAction.Argument2>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="552,743" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="510,651" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3" LaunchMethod="Automation" ShowExcelWindow="False">
                        <ueab:ExcelProcessScopeX.Body>
                          <ActivityAction x:TypeArguments="ui:IExcelProcess">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476,565" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="434,340" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None">
                                <ueab:ExcelApplicationCard.Body>
                                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="SpVCB" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,68" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_2" Index="0">
                                        <ui:ExcelGetWorkbookSheet.Sheet>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">sheetName</CSharpReference>
                                          </OutArgument>
                                        </ui:ExcelGetWorkbookSheet.Sheet>
                                      </ui:ExcelGetWorkbookSheet>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,93" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
                                        <ui:LogMessage.Message>
                                          <InArgument x:TypeArguments="x:Object">
                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">sheetName</CSharpValue>
                                          </InArgument>
                                        </ui:LogMessage.Message>
                                      </ui:LogMessage>
                                      <ueab:FindFirstLastDataRowX BlankRowsToSkip="0" ColumnName="Mô tả" ConfigureLastRowAs="LastPopulatedRow" DisplayName="Find First/Last Data Row" FirstRowOffset="0" HasHeaders="True" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="FindFirstLastDataRowX_1" LastRowOffset="0">
                                        <ueab:FindFirstLastDataRowX.FirstRowIndex>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">firstRow</CSharpReference>
                                          </OutArgument>
                                        </ueab:FindFirstLastDataRowX.FirstRowIndex>
                                        <ueab:FindFirstLastDataRowX.LastRowIndex>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">lastRow</CSharpReference>
                                          </OutArgument>
                                        </ueab:FindFirstLastDataRowX.LastRowIndex>
                                        <ueab:FindFirstLastDataRowX.Range>
                                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">SpVCB.Sheet[sheetName].Range["A11:E1048576"]</CSharpValue>
                                          </InArgument>
                                        </ueab:FindFirstLastDataRowX.Range>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:FindFirstLastDataRowX>
                                      <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4">
                                        <ui:ExcelReadRange.DataTable>
                                          <OutArgument x:TypeArguments="sd:DataTable">
                                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">tmpTable</CSharpReference>
                                          </OutArgument>
                                        </ui:ExcelReadRange.DataTable>
                                        <ui:ExcelReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">"A11:E" + lastRow</CSharpValue>
                                          </InArgument>
                                        </ui:ExcelReadRange.Range>
                                        <ui:ExcelReadRange.SheetName>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">sheetName</CSharpValue>
                                          </InArgument>
                                        </ui:ExcelReadRange.SheetName>
                                      </ui:ExcelReadRange>
                                      <ui:MergeDataTable DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Ignore">
                                        <ui:MergeDataTable.Destination>
                                          <InOutArgument x:TypeArguments="sd:DataTable">
                                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">soPhuTable</CSharpReference>
                                          </InOutArgument>
                                        </ui:MergeDataTable.Destination>
                                        <ui:MergeDataTable.Source>
                                          <InArgument x:TypeArguments="sd:DataTable">
                                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">tmpTable</CSharpValue>
                                          </InArgument>
                                        </ui:MergeDataTable.Source>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:MergeDataTable>
                                    </Sequence>
                                  </ActivityAction>
                                </ueab:ExcelApplicationCard.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ExcelApplicationCard.WorkbookPath>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">CurrentFile.FullName</CSharpValue>
                                  </InArgument>
                                </ueab:ExcelApplicationCard.WorkbookPath>
                              </ueab:ExcelApplicationCard>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">soPhuTable.RowCount()</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelProcessScopeX.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ExcelProcessScopeX>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachFileX.Body>
                <ui:ForEachFileX.Folder>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">CurrentFolder.FullName</CSharpValue>
                  </InArgument>
                </ui:ForEachFileX.Folder>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEachFileX>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFolderX.Body>
        <ui:ForEachFolderX.Folder>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">in_folderLastMonth.LocalPath +"\\SP VCB"</CSharpValue>
          </InArgument>
        </ui:ForEachFolderX.Folder>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachFolderX>
      <ui:ForEachFileX DisplayName="For Each File in Folder Outlook" sap:VirtualizedContainerService.HintSize="400,91.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_14" IncludeSubDirectories="False" OrderBy="NameDescFirst" SkipFolderWithoutPermission="False">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476.8,340.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" DisplayName="Excel Process Scope đọc các file outlook thành datatable" sap:VirtualizedContainerService.HintSize="624,249.6" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_4" LaunchMethod="Automation" ProcessMode="ReuseIfExists" ShowExcelWindow="False">
                <ueab:ExcelProcessScopeX.Body>
                  <ActivityAction x:TypeArguments="ui:IExcelProcess">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,153.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="356.8,62.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="510.4,1124.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="outlookFile" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="476.8,845.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:FindFirstLastDataRowX BlankRowsToSkip="1" ConfigureLastRowAs="LastPopulatedRow" DisplayName="Find First/Last Data Row" FirstRowOffset="0" HasHeaders="True" sap:VirtualizedContainerService.HintSize="433.6,317.6" sap2010:WorkflowViewState.IdRef="FindFirstLastDataRowX_2" LastRowOffset="0">
                                    <ueab:FindFirstLastDataRowX.ColumnName>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">outlookFile.Sheet["Sheet1"].Cell["A8"]</CSharpValue>
                                      </InArgument>
                                    </ueab:FindFirstLastDataRowX.ColumnName>
                                    <ueab:FindFirstLastDataRowX.FirstRowIndex>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">firstRow</CSharpReference>
                                      </OutArgument>
                                    </ueab:FindFirstLastDataRowX.FirstRowIndex>
                                    <ueab:FindFirstLastDataRowX.LastRowIndex>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">lastRow</CSharpReference>
                                      </OutArgument>
                                    </ueab:FindFirstLastDataRowX.LastRowIndex>
                                    <ueab:FindFirstLastDataRowX.Range>
                                      <InArgument x:TypeArguments="ue:IReadRangeRef">
                                        <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">outlookFile.Sheet["Sheet1"].Range["A8:W1048576"]</CSharpValue>
                                      </InArgument>
                                    </ueab:FindFirstLastDataRowX.Range>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ueab:FindFirstLastDataRowX>
                                  <ui:ExcelReadRange AddHeaders="False" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="433.6,69.6" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" SheetName="Sheet1">
                                    <ui:ExcelReadRange.DataTable>
                                      <OutArgument x:TypeArguments="sd:DataTable">
                                        <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">tmpTable</CSharpReference>
                                      </OutArgument>
                                    </ui:ExcelReadRange.DataTable>
                                    <ui:ExcelReadRange.Range>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">"A8:W" +lastRow</CSharpValue>
                                      </InArgument>
                                    </ui:ExcelReadRange.Range>
                                  </ui:ExcelReadRange>
                                  <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="433.6,144.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Merge">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sd:DataTable">
                                        <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">outlookTable</CSharpValue>
                                      </InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="sd:DataTable">
                                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">tmpTable</CSharpValue>
                                    </InArgument>
                                  </InvokeMethod>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">outlookTable.RowCount()</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                  </ui:LogMessage>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueab:ExcelApplicationCard.WorkbookPath>
                              <InArgument x:TypeArguments="x:String">
                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">CurrentFile.FullName</CSharpValue>
                              </InArgument>
                            </ueab:ExcelApplicationCard.WorkbookPath>
                          </ueab:ExcelApplicationCard>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="513.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">exception.Message</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelProcessScopeX.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelProcessScopeX>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
        <ui:ForEachFileX.Folder>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">in_folderLastMonth.LocalPath + "\\Outlook"</CSharpValue>
          </InArgument>
        </ui:ForEachFileX.Folder>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachFileX>
      <ui:ForEachFileX DisplayName="For Each File in Folder Kho" Filter="*.xlsx" sap:VirtualizedContainerService.HintSize="400,91.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_10" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="632,1445.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <Sequence.Variables>
                <Variable x:TypeArguments="scg:List(x:String)" Name="khoSheets" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="588.8,1354.4" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_5" LaunchMethod="Automation" ShowExcelWindow="False">
                <ueab:ExcelProcessScopeX.Body>
                  <ActivityAction x:TypeArguments="ui:IExcelProcess">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="555.2,1258.4" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="512,1167.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_4" ResizeWindow="None">
                        <ueab:ExcelApplicationCard.Body>
                          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Kho" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478.4,888" sap2010:WorkflowViewState.IdRef="Sequence_22">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="435.2,32" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1">
                                <ui:ExcelGetWorkbookSheets.Sheets>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">
                                    <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">khoSheets</CSharpReference>
                                  </OutArgument>
                                </ui:ExcelGetWorkbookSheets.Sheets>
                              </ui:ExcelGetWorkbookSheets>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="435.2,724.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,590.4" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ueab:FindFirstLastDataRowX BlankRowsToSkip="1" ColumnName="STT" ConfigureLastRowAs="LastPopulatedRow" DisplayName="Find First/Last Data Row" FirstRowOffset="0" HasHeaders="True" sap:VirtualizedContainerService.HintSize="356.8,62.4" sap2010:WorkflowViewState.IdRef="FindFirstLastDataRowX_3" LastRowOffset="0">
                                        <ueab:FindFirstLastDataRowX.FirstRowIndex>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">firstRow</CSharpReference>
                                          </OutArgument>
                                        </ueab:FindFirstLastDataRowX.FirstRowIndex>
                                        <ueab:FindFirstLastDataRowX.LastRowIndex>
                                          <OutArgument x:TypeArguments="x:Int32">
                                            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">lastRow</CSharpReference>
                                          </OutArgument>
                                        </ueab:FindFirstLastDataRowX.LastRowIndex>
                                        <ueab:FindFirstLastDataRowX.Range>
                                          <InArgument x:TypeArguments="ue:IReadRangeRef">
                                            <CSharpValue x:TypeArguments="ue:IReadRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">Kho.Sheet[currentItem]</CSharpValue>
                                          </InArgument>
                                        </ueab:FindFirstLastDataRowX.Range>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ueab:FindFirstLastDataRowX>
                                      <ui:ExcelReadRange AddHeaders="True" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="356.8,69.6" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7">
                                        <ui:ExcelReadRange.DataTable>
                                          <OutArgument x:TypeArguments="sd:DataTable">
                                            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">tmpTable</CSharpReference>
                                          </OutArgument>
                                        </ui:ExcelReadRange.DataTable>
                                        <ui:ExcelReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">"A1:O"+lastRow</CSharpValue>
                                          </InArgument>
                                        </ui:ExcelReadRange.Range>
                                        <ui:ExcelReadRange.SheetName>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">currentItem</CSharpValue>
                                          </InArgument>
                                        </ui:ExcelReadRange.SheetName>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:ExcelReadRange>
                                      <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="356.8,144.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Merge">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="sd:DataTable">
                                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">khoTable</CSharpValue>
                                          </InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="sd:DataTable">
                                          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">tmpTable</CSharpValue>
                                        </InArgument>
                                      </InvokeMethod>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="356.8,102.4" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info">
                                        <ui:LogMessage.Message>
                                          <InArgument x:TypeArguments="x:Object">
                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">khoTable.RowCount()</CSharpValue>
                                          </InArgument>
                                        </ui:LogMessage.Message>
                                      </ui:LogMessage>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <ui:ForEach.Values>
                                  <InArgument x:TypeArguments="sc:IEnumerable">
                                    <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">khoSheets</CSharpValue>
                                  </InArgument>
                                </ui:ForEach.Values>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelApplicationCard.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard.WorkbookPath>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">CurrentFile.FullName</CSharpValue>
                          </InArgument>
                        </ueab:ExcelApplicationCard.WorkbookPath>
                      </ueab:ExcelApplicationCard>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelProcessScopeX.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelProcessScopeX>
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
        <ui:ForEachFileX.Folder>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">in_folderLastMonth.LocalPath + "\\Kho Vnpay"</CSharpValue>
          </InArgument>
        </ui:ForEachFileX.Folder>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachFileX>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="VcbTableHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="462.4,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="VcbTableHandle.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Int64" x:Key="out_vcbMoney">
          <CSharpReference x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">vcbMoney</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_hoantraTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">vcbHoantraTable</CSharpReference>
        </OutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_soPhuTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">soPhuTable</CSharpReference>
        </InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="KhoHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="462.4,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="KhoHandle.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_khoTable">
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">khoTable</CSharpValue>
        </InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_giftDT">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">khoGiftDT</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_topupDT">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">khoTopupDT</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="out_GDCount">
          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">khoTopupGDCount</CSharpReference>
        </OutArgument>
        <OutArgument x:TypeArguments="x:Int64" x:Key="out_khoMoney">
          <CSharpReference x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">khoMoney</CSharpReference>
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="OutlookTableHandle.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="462.4,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="OutlookTableHandle.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Int64" x:Key="out_totalMoney">
          <CSharpReference x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">outlookMoney</CSharpReference>
        </OutArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_outlookTable">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">outlookTable</CSharpReference>
        </InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Sequence DisplayName="đối chiếu" sap:VirtualizedContainerService.HintSize="462.4,736" sap2010:WorkflowViewState.IdRef="Sequence_36">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="compareTopupAndVcb.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="compareTopupAndVcb.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_khoTopupDT">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">khoTopupDT</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_soPhuDt">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">soPhuTable</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_folderLastMonth">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">in_folderLastMonth.LocalPath</CSharpValue>
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="compareDoiQua.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="compareDoiQua.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_khoGiftDt">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">khoGiftDT</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_fileFolderPath">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92">in_folderLastMonth.LocalPath</CSharpValue>
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="compareTopupAndOutlook.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="compareTopupAndOutlook.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:Int64" x:Key="in_khoTopupMoney">
            <CSharpValue x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">khoMoney</CSharpValue>
          </InArgument>
          <InArgument x:TypeArguments="x:Int64" x:Key="in_outlookTopupMoney">
            <CSharpValue x:TypeArguments="x:Int64" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">outlookMoney</CSharpValue>
          </InArgument>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_khoTopupDt">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">khoTopupDT</CSharpReference>
          </InOutArgument>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_outlookDt">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">outlookTable</CSharpReference>
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_folderLastMonth">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">in_folderLastMonth.LocalPath</CSharpValue>
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="compareOutlookAndVcb.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="337.6,123.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="compareOutlookAndVcb.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_soPhuTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">soPhuTable</CSharpValue>
          </InArgument>
          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_khoTopupDt">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_37">khoTopupDT</CSharpReference>
          </InOutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
    </Sequence>
  </Sequence>
</Activity>